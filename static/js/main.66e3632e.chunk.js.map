{"version":3,"sources":["ElapsedTime.js","PeriodSelector.js","ShotCounter.js","App.js","serviceWorker.js","index.js"],"names":["ElapsedTime","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayElapsedTime","event","isValid","target","value","setState","eventTime","time","moment","state","periodLength","diff","format","elapsedTime","val","length","test","_splitVal","split","minutesStr","secondsStr","minutes","Number","seconds","isValidMinutesOrSeconds","isInteger","togglePeriodLength","showPeriodLength","changePeriodLength","react_default","a","createElement","Row_default","Col_default","xs","onClick","index_es","icon","faCog","reactTextMask_default","mask","className","placeholder","guide","onChange","Card_default","Component","PeriodSelector","handleChange","onPeriodChange","bind","assertThisInitialized","ToggleButtonGroup_default","type","period","name","ToggleButton_default","variant","ShotCounter","handleShotClick","shotEvent","swipedLeft","tempShotCounts","shotCounts","count","get","set","shotTotal","Map","concat","side","toLowerCase","Swipeable_default","onSwipedLeft","trackMouse","body","App","handlePeriodChange","Container_default","fluid","src_ElapsedTime_0","src_PeriodSelector","src_ShotCounter_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66e3632e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Card from 'react-bootstrap/lib/Card';\nimport MaskedInput from 'react-text-mask'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment';\n\nimport './ElapsedTime.css';\n\nclass ElapsedTime extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      periodLength: '15:00',\n      eventTime: '00:00',\n      elapsedTime: '00:00',\n      showPeriodLength: true  \n    };\n  }\n  \n  displayElapsedTime = (event) => {\n    if (this.isValid(event.target.value)) {\n      this.setState({eventTime: event.target.value});\n      var time = new moment(new moment(this.state.periodLength, 'mm:ss').diff(new moment(event.target.value, 'mm:ss'))).format('mm:ss'); \n      this.setState({elapsedTime: time});\n    }\n  }\n\n  isValid = (val) => {\n    var regexp = /^\\d{0,2}?:?\\d{0,2}$/;\n    if (val !== '00:00' && val.length === 5  && !regexp.test(val)) {\n      return false;\n    }\n\n    var _splitVal = val.split(':'),\n      minutesStr = _splitVal[0],\n      secondsStr = _splitVal[1];\n\n    var minutes = Number(minutesStr);\n    var seconds = Number(secondsStr);\n\n    return this.isValidMinutesOrSeconds(minutes) && this.isValidMinutesOrSeconds(seconds);\n  }\n\n  isValidMinutesOrSeconds = (val) => {\n    return Number.isInteger(val) && val >= 0 && val < 60;\n  }\n\n  togglePeriodLength = () => {\n    const { showPeriodLength } = this.state;\n    this.setState({\n      // toggle value of `showPeriodLength`\n      showPeriodLength: !showPeriodLength,\n    });\n  }\n\n  changePeriodLength = (event) => {\n    if (this.isValid(event.target.value)) {\n      this.setState({periodLength: event.target.value});\n    }  \n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs={3}>\n          <span><h1 onClick={this.togglePeriodLength}>Event Time <FontAwesomeIcon icon={faCog} /></h1></span>\n          <span>{this.state.showPeriodLength && <MaskedInput mask={[/[0-6]/, /\\d/, ':', /[0-6]/, /\\d/]}\n                      className=\"form-control\"\n                      placeholder=\"00:00\"\n                      guide={true}\n                      value={this.state.periodLength}\n                      onChange={this.changePeriodLength}\n          />}</span>            \n        </Col>\n        <Col xs={3}>\n          <MaskedInput mask={[/[0-6]/, /\\d/, ':', /[0-6]/, /\\d/]}\n                      className=\"form-control\"\n                      placeholder=\"00:00\"\n                      guide={true}\n                      value={this.state.eventTime}\n                      onChange={this.displayElapsedTime}\n          />\n        </Col>\n        <Col xs={6}>\n          <Card className=\"time-entry\">\n            <h1>Elapsed Time: {this.state.elapsedTime}</h1>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default ElapsedTime;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport ToggleButtonGroup from 'react-bootstrap/lib/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/lib/ToggleButton';\n\nclass PeriodSelector extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (value, event) => {\n    this.props.onPeriodChange(value);\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs={5}>\n          <h4 className=\"float-right\">Period:</h4>\n        </Col>\n        <Col xs={7}>\n          <ToggleButtonGroup type=\"radio\" value={this.props.period} name=\"periods\" onChange={this.handleChange}>\n            <ToggleButton value={'1st'} variant=\"outline-secondary\">1st</ToggleButton>\n            <ToggleButton value={'2nd'} variant=\"outline-secondary\">2nd</ToggleButton>\n            <ToggleButton value={'3rd'} variant=\"outline-secondary\">3rd</ToggleButton>\n            <ToggleButton value={'OT'} variant=\"outline-secondary\">OT</ToggleButton>\n          </ToggleButtonGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default PeriodSelector;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Card from 'react-bootstrap/lib/Card';\nimport Swipeable from 'react-swipeable'\n\nimport './ShotCounter.css';\n\nclass ShotCounter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shotCounts: new Map().set(this.props.period, 0),\n      shotTotal: 0\n    }\n  }\n\n  handleShotClick = () => {\n    this.shotEvent(1);  \n  }\n\n  swipedLeft = () => {\n    this.shotEvent(-1);\n  }\n\n  shotEvent = (value) => {\n    const tempShotCounts = this.state.shotCounts;\n    const count = tempShotCounts.get(this.props.period) || 0;\n    tempShotCounts.set(this.props.period, count + value);\n\n    this.setState({shotCounts: tempShotCounts })\n    this.setState({shotTotal: this.state.shotTotal + value});\n  }\n\n  render() {\n    return (\n      <div className={`.shot-counter ${this.props.side.toLowerCase()}`}>\n        <Row>\n          <Col xs={12}>\n            <h3>{this.props.side} ({this.state.shotTotal})</h3>\n          </Col>\n        </Row> \n        <Row>\n          <Col xs={12}>\n            <Swipeable onSwipedLeft={this.swipedLeft} trackMouse=\"true\">\n              <div className=\"tap-button\" onClick={this.handleShotClick}>\n                <Card body>\n                  <h3>{this.props.period}</h3>\n                  <h3>{this.state.shotCounts.get(this.props.period) || 0}</h3>\n                </Card>\n              </div>\n            </Swipeable>\n          </Col>\n        </Row> \n        <Row>\n          <Col xs={12}>\n            <div className=\"instructions\">\n              <div>Tap to add shot</div>\n              <div>Swipe left to remove shot</div>\n            </div>\n          </Col>\n        </Row> \n      </div>\n    );\n  }\n}\n\nexport default ShotCounter;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/lib/Container';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport './App.css';\nimport ElapsedTime from './ElapsedTime';\nimport PeriodSelector from './PeriodSelector';\nimport ShotCounter from './ShotCounter';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      period: '1st',\n    };\n  }\n\n  handlePeriodChange = (period) => {\n    this.setState({period: period});\n  }\n\n  render() {\n    return (\n      <div className=\"helper\">\n        <Container fluid=\"true\">\n          <ElapsedTime/>\n          <Row>\n            <Col>\n              <h1 className=\"title\">Shot Counter</h1>\n            </Col> \n          </Row>\n          <PeriodSelector period={this.state.period} onPeriodChange={this.handlePeriodChange}/>\n          <Row>\n            <Col xs={6}>\n              <ShotCounter side=\"Home\" period={this.state.period}/>\n            </Col>\n            <Col xs={6}>\n              <ShotCounter side=\"Away\" period={this.state.period}/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}